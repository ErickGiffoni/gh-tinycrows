name: "Security Scan Action"
description: "Run Horusec, OWASP ZAP and Dastardly scans, then upload results to DefectDojo."
author: "TinyCrows"

inputs:
  defectdojo_url:
    description: "DefectDojo API URL"
    required: true
  defectdojo_api_key:
    description: "DefectDojo API Key"
    required: true
  engagement_id:
    description: "Engagement ID in DefectDojo"
    required: true
  repo_token:
    description: "GitHub Token"
    required: true
  target_url:
    description: "Target URL for DAST scans (OWASP ZAP)"
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Horusec
      shell: bash
      run: |
        # Ensure Horusec is installed
        curl -fsSL https://github.com/ZupIT/horusec/releases/latest/download/horusec_linux_amd64 -o horusec
        chmod +x horusec
        mv horusec /usr/local/bin/horusec
        # Run Horusec with JSON output
        horusec start --project-path . -D
        horusec start --project-path . --output-format json --json-output-file horusec-report.json -D

    - name: Download and Run OWASP ZAP
      shell: bash
      run: |
        ZAP_VERSION="2.15.0"
        ZAP_URL="https://github.com/zaproxy/zaproxy/releases/download/v${ZAP_VERSION}/ZAP_${ZAP_VERSION}_Linux.tar.gz"
        curl -L "${ZAP_URL}" -o zap.tar.gz
        mkdir /zap
        tar -xvzf zap.tar.gz -C /zap --strip-components=1
        rm zap.tar.gz
        /zap/zap.sh -quickurl ${{ inputs.target_url }} -quickout zap_report.xml

    - name: Run Dastardly Scan
      uses: PortSwigger/dastardly-github-action@v1.0.0
      with:
        target-url: ${{ inputs.target_url }}
        engagement-id: ${{ inputs.engagement_id }}
        defectdojo-url: ${{ inputs.defectdojo_url }}
        defectdojo-api-key: ${{ inputs.defectdojo_api_key }}

    - name: Upload Horusec results to DefectDojo
      shell: bash
      run: |
        curl -X POST "${{ inputs.defectdojo_url }}/api/v2/import-scan/" \
        -H "Authorization: Token ${{ inputs.defectdojo_api_key }}" \
        -F "engagement=${{ inputs.engagement_id }}" \
        -F 'scan_type=Horusec Scan' \
        -F 'file=@horusec-report.json' \
        -F 'active=true' \
        -F 'verified=true'

    - name: Upload OWASP ZAP results to DefectDojo
      shell: bash
      run: |
        curl -X POST "${{ inputs.defectdojo_url }}/api/v2/import-scan/" \
        -H "Authorization: Token ${{ inputs.defectdojo_api_key }}" \
        -F "engagement=${{ inputs.engagement_id }}" \
        -F 'scan_type=ZAP Scan' \
        -F 'file=@zap_report.xml' \
        -F 'active=true' \
        -F 'verified=true'

branding:
  icon: "shield"
  color: "blue"
